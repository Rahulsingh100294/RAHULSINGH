-- PW ASSIGNMENTS NO2.
-- Question 1:  Retrieve the total number of rentals made in the Sakila database.Hint: Use the COUNT() function.
use sakila ;
select * from rental ;
select count(*) from rental;

-- Quetion 2: Find the average rental duration (in days) of movies rented from the Sakila database. Hint: Utilize the AVG() function. 
select avg(rental_duration) from film;

-- String Functions: 
-- Question 3: Display the first name and last name of customers in uppercase. Hint: Use the UPPER () function.
select upper(first_name) as FirstName, upper(last_name) as LastName from customer; 

-- Question 4: Extract the month from the rental date and display it alongside the rental ID.Hint: Employ the MONTH() function.
select * from rental;
select month(rental_date) as 'MONTH' , rental_id as 'RENTALID' from rental;

-- GROUP BY:
-- Question 5: Retrieve the count of rentals for each customer (display customer ID and the count of rentals). Hint: Use COUNT () in conjunction with GROUP BY.
select customer_id as 'Customer Id',count(*) as 'Count Of Rentals' from rental group by customer_id;

-- Question 6:Find the total revenue generated by each store. Hint: Combine SUM() and GROUP BY. 
SELECT 
    store.store_id AS 'Store ID',
    SUM(payment.amount) AS 'Total Revenue'
FROM
    store
        JOIN
    staff ON store.store_id = staff.store_id
        JOIN
    payment ON staff.staff_id = payment.staff_id
GROUP BY store.store_id;

-- Question 7: Display the title of the movie, customer s first name, and last name who rented it. Hint: Use JOIN between the film, inventory, rental, and customer tables.
SELECT 
    film.title AS 'Movie Title',
    customer.first_name AS 'First Name',
    customer.last_name AS 'Last Name'
FROM
    film
        JOIN
    inventory ON film.film_id = inventory.film_id
        JOIN
    rental ON inventory.inventory_id = rental.inventory_id
        JOIN
    customer ON rental.customer_id = customer.customer_id; 

-- Question 8: Retrieve the names of all actors who have appeared in the film "Gone with the Wind." Hint: Use JOIN between the film actor, film, and actor tables. 
SELECT 
    actor.first_name, actor.last_name
FROM
    actor
        JOIN
    film_actor ON actor.actor_id = film_actor.actor_id
        JOIN
    film ON film_actor.film_id = film.film_id
WHERE
    film.title = 'Gone with the Wind';
    
    -- GROUP BY: 
    -- Question 1: Determine the total number of rentals for each category of movies. Hint: JOIN film_category, film, and rental tables, then use cOUNT () and GROUP BY. 
SELECT 
    category.name AS 'Category', COUNT(*) AS 'Total Rentals'
FROM
    film_category
        JOIN
    film ON film_category.film_id = film.film_id
        JOIN
    inventory ON film.film_id = inventory.film_id
        JOIN
    rental ON inventory.inventory_id = rental.inventory_id
        JOIN
    category ON film_category.category_id = category.category_id
GROUP BY category.name;

-- Question 2: Find the average rental rate of movies in each language. Hint: JOIN film and language tables, then use AVG () and GROUP BY.
SELECT 
    language.name AS 'Language',
    AVG(film.rental_rate) AS 'Average Rental Rate'
FROM
    film
        JOIN
    language ON film.language_id = language.language_id
GROUP BY language.name;

-- Joins:
-- Question 3: Retrieve the customer names along with the total amount they've spent on rentals. Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY. 
SELECT 
    customer.first_name AS 'First Name',
    customer.last_name AS 'Last Name',
    SUM(payment.amount) AS 'Total Amount Spent'
FROM
    customer
        JOIN
    rental ON customer.customer_id = rental.customer_id
        JOIN
    payment ON rental.rental_id = payment.rental_id
GROUP BY customer.customer_id;

-- Question 4: List the titles of movies rented by each customer in a particular city (e.g., 'London'). Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY.

SELECT 
    customer.first_name AS 'First Name',
    customer.last_name AS 'Last Name',
    film.title AS 'Movie Title'
FROM
    customer
        JOIN
    address ON customer.address_id = address.address_id
        JOIN
    city ON address.city_id = city.city_id
        JOIN
    rental ON customer.customer_id = rental.customer_id
        JOIN
    inventory ON rental.inventory_id = inventory.inventory_id
        JOIN
    film ON inventory.film_id = film.film_id
WHERE
    city.city = 'London'
GROUP BY customer.customer_id , film.title;

-- Advanced Joins and GROUP BY:
-- Question 5: Display the top 5 rented movies along with the number of times they've been rented.Hint: JOIN film, inventory, and rental tables, then use cOUNT() and GROUP BY, and limit the results.
SELECT 
    film.title AS 'Movie Title',
    COUNT(*) AS 'Number of Times Rented'
FROM
    film
        JOIN
    inventory ON film.film_id = inventory.film_id
        JOIN
    rental ON inventory.inventory_id = rental.inventory_id
GROUP BY film.title
ORDER BY COUNT(*) DESC
LIMIT 5;

-- Question 6: Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY. 
SELECT 
    customer.customer_id,
    customer.first_name,
    customer.last_name
FROM
    customer
        JOIN
    rental ON customer.customer_id = rental.customer_id
        JOIN
    inventory ON rental.inventory_id = inventory.inventory_id
WHERE
    inventory.store_id = 1
        AND customer.customer_id IN (SELECT 
            customer_id
        FROM
            rental
                JOIN
            inventory ON rental.inventory_id = inventory.inventory_id
        WHERE
            inventory.store_id = 2)
GROUP BY customer.customer_id;
